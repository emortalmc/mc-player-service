name: ci
on:
  push:

env:
  DOCKER_IMAGE_NAME: ghcr.io/${{ github.repository }}
  REGISTRY: ghcr.io

jobs:
  go-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: "1.20"
          cache: false
      - uses: actions/checkout@v3
      - name: go-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout 2m0s

  go-publish:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [ go-lint ]
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.build.outputs.image }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          cache-from: type=registry,ref=${{ env.DOCKER_IMAGE_NAME }}:latest
          cache-to: type=inline
          tags: |
            ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
            ${{ env.DOCKER_IMAGE_NAME }}:latest

  k8s-repo-update:
    needs: [ go-publish ]
    runs-on: ubuntu-latest
    steps:
      - name: clone
        run: |
          git clone https://emortalmc/k8s-configs
          
          cd argocd/managed-apps/apis
          sed -i "s|${{ env.DOCKER_IMAGE_NAME }}:latest|${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}|g" mc-player.yaml
          
          git commit -m sync ${{ github.event.head_commit.message }} (${{ github.event.repository.name }}:${{ github.sha }})
